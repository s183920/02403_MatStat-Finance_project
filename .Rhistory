# op <- options()
# current_codepage <- as.character(l10n_info()$codepage)
# op <- options()
# current_codepage <- as.character(l10n_info()$codepage)
# install.packages("ISOweek")
# install.packages("sqldf")
# install.packages("lubridate")
# install.packages("ggplot2")
library(ISOweek)
dayLabs<- weekdays(seq.Date(as.Date("2017-01-02"),as.Date("2017-01-08"),1)) # A week from monday to sunday
tsFiasp <- ISOdatetime(2017, 4, 12, 13, 0, 0, tz = Sys.timezone()) #(year, month, day, hour, min, sec, tz = "")
insulinLabs <- c("Rapid","Fiasp")
insulinCol <- c("#FF6600", "#FFFF00")
# ?localeToCharset()
# ?Sys.setlocale
# Sys.setlocale("LC_ALL", "de_DE.UTF-8")
# Sys.getlocale("LC_ALL")
# lc_ctype <- Sys.getlocale("LC_CTYPE")
# lc_ctype
# lc_time <- Sys.getlocale("LC_TIME")
# # on.exit(Sys.setlocale("LC_CTYPE", lc_ctype))
# # on.exit(Sys.setlocale("LC_TIME", lc_time), add = TRUE)
# Sys.setlocale("LC_CTYPE", lc_ctype)
# Sys.setlocale("LC_TIME", lc_time)
# Sys.localeconv()   ## Viser locale settings.
#
# # l10n_info()$codepage
# # reorder http://stackoverflow.com/questions/36125354/plotly-r-order-legend-entries or
# # http://stackoverflow.com/questions/36631182/sort-2-dimensional-table-in-r-by-weekdays
# # dayLabs<-c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
# Encoding(enc2utf8(dayLabs) )
# ?iconv()
# as.char
# ?Encoding()
# ?localeconv
#
# Issue with codepage https://stackoverflow.com/questions/26603564/using-weekdays-with-any-locale-under-windows
# Sys.getlocale()
# weekdays(Sys.Date())
#
# get_today_windows <- function(locale = NULL)
# {
#   if(!is.null(locale))
#   {
#     lc_ctype <- Sys.getlocale("LC_CTYPE")
#     lc_time <- Sys.getlocale("LC_TIME")
#     on.exit(Sys.setlocale("LC_CTYPE", lc_ctype))
#     on.exit(Sys.setlocale("LC_TIME", lc_time), add = TRUE)
#     Sys.setlocale("LC_CTYPE", locale)
#     Sys.setlocale("LC_TIME", locale)
#   }
#   today <- weekdays(Sys.Date())
#   current_codepage <- as.character(l10n_info()$codepage)
#   iconv(today, from = current_codepage, to = "utf8")
# }
# get_today_windows()
# ## [1] "Tuesday"
# get_today_windows("French_France")
# get_today_windows("English_US")
# get_today_windows("Danish_Denmark")
# current_codepage <- as.character(l10n_info()$codepage)
# iconv(weekdays(Sys.Date()), from = current_codepage, to = "utf8")
input.filename <- c("CareLink Lukas 2017-03.csv","CareLink Lukas 2017-04.csv","CareLink Lukas 2017-05.csv")
input.navn <- "Lukas"
input.periode <- "2017-03 to 2017-05"
source('init.R')
source('import carelink.R')
source('extract data.R')
source('extract data bolus.R')
install.packages("RH2")
install.packages("sqldf")
install.packages("sqldf")
library(RH2)
library(RH2)
library(RH2)
source('extract data bolus.R')
library(RH2)
install.packages("RH2")
library(RH2)
install.packages("rJava")
install.packages("RH2")
library(RH2)
library(RH2)
View(bolusdata)
5 + 5
source('~/.active-rstudio-document', echo=TRUE)
install.packages("shinydashboard")
shinyApp(ui, server)
shinyApp(ui, server)
dropdownMenu(type="tasks", badgeStatus = "succes", taskItem(value = 90, color="green", "documentation"))
(2*pi)*(2*pi)
(2*p)*(2*p)
"Hello" > "Goodbye"
y < 5 | y >15
y <- 4
y < 5 | y >15
linkedin <- c(16, 9, 13, 5, 2, 17, 14)
last <- tail(linkedin, 1)
linkedin <- c(16, 9, 13, 5, 2, 17, 14)
last <- tail(linkedin, 1)
last
last <- tail(linkedin)
edin <- c(16, 9, 13, 5, 2, 17, 14)
last <- tail(linkedin)
last
x is a negative number
print(x is a negative number)
print("x is a ne")
x <- 3
if(x<0) {print("x is a negative number")} else {print("x is a positive number or 0")}
?seq
as.list(c(1,2,3))
append(c(1,2,3), c(4,5,6))
rev(c(1,2,3))
which(c("a", "b", "c") == "b")
grep(".c", c("abc", "bca", "cab"))
grep("*c", c("abc", "bca", "cab"))
grep("*c", c("abc", "bca", "ab"))
grep("*c", c("abc", "bca", "ccab"))
grep("*c", c("abc", "bca", "ccab", "c"))
grep("c", c("abc", "bca", "ccab", "c"))
?*
grep(".*c", c("abc", "bca", "ccab", "c"))
grep(".*c", c("abc", "bca", "cab", "c"))
grep("c.*", c("abc", "bca", "cab", "c"))
grep("c.", c("abc", "bca", "cab", "c"))
grep("a.*c.", c("abc", "bca", "cab", "c"))
grep("a.*c.", c("abbc", "bca", "cab", "c"))
grep("a.*c.", c("abtc", "bca", "cab", "c"))
grepl("a.*c.", c("abtc", "bca", "cab", "c"))
grepl("a.c.", c("abtc", "bca", "cab", "c"))
grepl("a.c.", c("abc", "bca", "cab", "c"))
grepl("a.c", c("abc", "bca", "cab", "c"))
grepl("a.c", c("abtc", "bca", "cab", "c"))
grepl("a.*c", c("abtc", "bca", "cab", "c"))
grepl(".*c", c("abtc", "bca", "cab", "c"))
grepl(".*c", c("abtc", "bca", "cab", "ac"))
grepl("a.*c", c("abtc", "bca", "cab", "ac"))
grepl("a.c", c("abtc", "bca", "cab", "ac"))
grepl("a.c", c("abtc", "bca", "cab", "ac", "abc"))
grepl("a.*c", c("abtc", "bca", "cab", "ac", "abc"))
today <- Sys.Date()
today <- Sys.Date()
today
today <- Sys.Date()
format(Sys.Date(), format="%d %B, %Y")
format(Sys.Date(), format= "Today is a %A!"
today <- Sys.Date()
format(Sys.Date(), format="%d %B, %Y")
format(Sys.Date(), format = "Today is a %A!")
today <- Sys.Date()
format(Sys.Date(), format="%d %B, %Y")
format(Sys.Date(), format = "I dag er det %A!")
I dag <- Sys.Date()
Idag <- Sys.Date()
format(Idag, format=%A)
Idag <- format(Sys.time, format=%A)
Idag <- format(Sys.time, format="%A")
Idag==fredag
Idag == as.Date(Fredag, format("%A")
Idag==fredag
Idag == as.Date("Fredag", format("%A")
Idag==fredag
as.Date("Fredag", format("%A")
fredag <- as.Date("Fredag", format("%A")
as.Date("Fredag", format("%A")
fred <- as.Date("Fredag", format("%A")
fred <- format("Fredag", format("%A"))
fred <- format("fredag", format("%A"))
as.Date("Fredag", format("%A")
Idag==fredag
fred <- format("fredag", format("%A"))
as.Date("Fredag", format("%A")
Idag==fredag
fred <- format("fredag", format("%A"))
as.Date("Fredag", format("%A")
Idag==fredag
fred <- format("fredag", format("%A"))
as.Date("Fredag", format("%A")
as.Date("Fredag", format("%A") == today
as.Date("Friday", format("%A") == today
as.Date("Fredag", format("%A") == today
as.Date("Fredag", format("%A") == today
today == friday
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
today
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
today <- format(as.Date("friday", format="%A"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
today==
sys.date()
today==
Sys.Date()
Sys.Date()
Sys.Date(format="%A")
format(Sys.Date(), format="%A")
format(Sys.Date(), format="%A")
source('~/.active-rstudio-document', echo=TRUE)
?read,delim()
?read.delim()
dir()
path <- file.path("downloads", "navne.txt")
navne <- read.delim("path", stringsAsFactors = FALSE, sep="/")
path <- file.path("downloads\navne.txt")
path <- file.path("downloads\navne.txt")
navne <- read.delim("path", stringsAsFactors = FALSE, sep="/")
dir()
library(readr)
bolusdata1 <- read_csv("//disklei/repository/lukas/anonymize/bolusdata1.csv")
View(bolusdata1)
source('~/.active-rstudio-document', echo=TRUE)
ct<- data.frame(bolusdata1$file="CT")
ct
dir
dir()
read.csv("bolusdata1", stringsAsFactors = FALSE)
library(dplyr)
library(dplyr)
install.packages("tidyr")
library("tidyr")
?gather()
?mutate_each()
install.packages("stringr")
library("stringr")
?mutate_each()
q()
(x*y)^4 == x^4 * y^4
x <- 15
y<-  25
(x*y)^4 == x^4 * y^4
x <- 15
y<-  25
(x*y)^8 == x^8 * y^8
(2*x+3*y)^2 == 4*x^2+9*y^2+12*x*y
x <- 1
5*x^2+4*x
24^2
2^2+3^3
2^2*3^2*4^2
14*16
2^6
2^5
2^7
10^-3
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
while (x > 4) {
print("hej")
x <- x -1
}
source('~/.active-rstudio-document', echo=TRUE)
dbinom(4,10,0.6)
?dbinom
dpois(4,3)
?dpois
?hyper
?dhyper
dhyper(0, 6, 20, 3)
?qnorm
attach()
attach(r = 3)
3*2/20
attach(c(a=2, n=3, N=20))
attach(list(a=2, n=3, N=20))
a
detach()
a
a*n/N# middelværdi
attach(list(a=2, n=3, N=20))
a*n/N# middelværdi
n*a/N*(N-a)/N*(N-n)/(N-1)
phyper(1, 2, 20, 3)
?phyper
dhyper(0, 6, 12, 3) #vil have 0, der er 6 mulige ud af 20 og trækker 3
dhyper(0, 6, 12, 3) #vil have 0, der er 6 mulige ud af 20 og trækker 3
dhyper(0, 6, 14, 3) #vil have 0, der er 6 mulige ud af 20 og trækker 3
phyper(1, 2, 18, 3)
1-dhyper(0, 2, 18, 3)
a*n/N# middelværdi
n*a/N*(N-a)/N*(N-n)/(N-1) # varians
qhyper(0.01, 0, 10, 10)
ppois(10, 0.99)
?rbinom
dbinom(1, 10, 0.99)
pbinom(1, 10, 0.99)
pbinom(0, 10, 0.01)
pbinom(0, 10, 0.1)
?ppois
1 - ppois(5, 1.6)
ppois(8, 1.6*5)
1.6*5
1-ppois(180, 19*12)
19*12
1-ppois(180/60*5, 19)
1-ppois(19, 180/60*5)
?ppois
x <-19
while (ppois(x, 15) = 0.99) {
print(x)
}
x
x <-19
while (ppois(x, 15) <= 0.99) {
x
x += 1
}
x += 1}
x <-19
while (ppois(x, 15) <= 0.99) {
x
x += 1}
x <-19
while (ppois(x, 15) <= 0.99) {
print(x)
x += 1}
x <-19
while (ppois(x, 15) <= 0.99) {
print(x)
x <- x+1
}
ppois(22:26, 15)
x <-19
while (ppois(x, 15) <= 0.99) {
print(x)
x <- x+1
}
ppois(22:26, 15)
while (ppois(x, 15) <= 0.99) {
x <- x+1
print(x)
}
x <-19
while (ppois(x, 15) <= 0.99) {
x <- x+1
print(x)
}
source('D:/OneDrive/Dokumenter/DTU/Statistik/finans_project/finans3.R', echo=TRUE)
getwd()
setwd("D:/OneDrive/Dokumenter/DTU/Statistik/finans_project")
getwd()
setwd("D:/OneDrive/Dokumenter/DTU/Statistik/finans_project")
wr <- read.table("finans1_data.csv", header=TRUE, sep=",", as.is=TRUE)
names(wr)
dim(wr)
class(wr)
454/12
454/52
454/52.25
source('D:/OneDrive/Dokumenter/DTU/Statistik/finans_project/finans3.R', echo=TRUE)
etfSum <- read.table("finans2_data.csv",header=TRUE, sep=",")
source('D:/OneDrive/Dokumenter/DTU/Statistik/finans_project/finans3.R', echo=TRUE)
